#Python set:
# a set is collection which is unordered and unindexed.
# sets are written with curly brackets

set1={"apple","banana","cherry"}

# we cannot acceess items by reffering to an index
# change an item:
print(set1.add("orange"))
print(set1)

# adding multiple items
set1.update(["mango","grapes"])
print(set1)


# Remove an item:
set1.remove("cherry")
print(set1)

set1.discard("banana")
print(set1)

set1.pop()
print(set1)

# clear function:
set1.clear()
print(set1)

del set1     # will give an error becuase set is not defined
#print(set1) 

# set constructor:
set2 = set((1,3,6,5,2,9,8))
print(set2)

set2[3] = 10 # cannot use index to change set will give error
print(set2)

#Python set:
# a set is collection which is unordered and unindexed.
# sets are written with curly brackets

set1={"apple","banana","cherry"}

# we cannot acceess items by reffering to an index
# change an item:
print(set1.add("orange"))
print(set1)

# adding multiple items
set1.update(["mango","grapes"])
print(set1)





# Remove an item:
set1.remove("cherry")
print(set1)

set1.discard("banana")
print(set1)


# Python dictionaries
# are collection which are unordered, changeable and index
# they are written with curly brackets
# they have keys and values


dict1 = {"brand":"ford","Model":"taurus","year":1964}
print(dict1)

# Acessing items:
# get the value of the model

print(dict1["Model"])

x=dict1["Model"]
print(x)

x = dict1.get("Model")
print(x)

# change the value
dict1["year"]= 2019
print(dict1)


# looping = for through dictionary:
# print all keys

for item in dict1:
    print(item)

#print all vaules:
    
    for item in dict1:
        print(dict1[item])

for item in dict1.values():
    print(item)


# loop through both key and values:

for item1, item2 in dict1.items():
    print(item1, item2)

#knowing the length of dictionary:
    print(len(dict1))

# Adding items:

dict1["color"] = "red"
print(dict1)


# Removing an item:
dict1.pop("Model")
print(dict1)


# Remove the last insert item:
dict1.popitem()
print(dict1)





set1.pop()
print(set1)

# clear function:
set1.clear()
print(set1)

del set1     # will give an error becuase set is not defined
#print(set1) 

# set constructor:
set2 = set((1,3,6,5,2,9,8))
print(set2)

set2[3] = 10 # cannot use index to change set will give error
#print(set2)


# Python dictionaries
# are collection which are unordered, changeable and index
# they are written with curly brackets
# they have keys and values


dict1 = {"brand":"ford","Model":"taurus","year":1964}
print(dict1)

# Acessing items:
# get the value of the model

print(dict1["Model"])

x=dict1["Model"]
print(x)

x = dict1.get("Model")
print(x)

# change the value
dict1["year"]= 2019
print(dict1)


# looping = for through dictionary:
# print all keys

for item in dict1:
    print(item)

#print all vaules:
    
    for item in dict1:
        print(dict1[item])

for item in dict1.values():
    print(item)


# loop through both key and values:

for item1, item2 in dict1.items():
    print(item1, item2)

#knowing the length of dictionary:
    print(len(dict1))

# Adding items:

dict1["color"] = "red"
print(dict1)


# Removing an item:
dict1.pop("Model")      
print(dict1)


# Remove the last insert item:
dict1.popitem()
print(dict1)


# deleting an item:
del dict1["brand"]
print(dict1)


# .pop and del do the same thing using different codes

# deleting the dictionary: 
del dict1
print(dict1)
# gives error because we deleted the dictionary


#dictionary constructor:
dict1 = dict(brand = "ford", model = "taurus", year = 2109)
print(dict1)

# clear function:
dict1.clear()
print(dict1)


# Build dictionary increamentally:
# create empty dictionary
person = {}
print(person)
print(type(person))

person["fname"] = "Joe"
person["lname"] = "smith"
person["age"] = 51
person ["spouse"] = "marry"
person["children"] = ["Ralph","Betty", "Joelle"]
person["pets"] = {"dog":"fido", "cat":"fox"}
print(person)

print(person["children"][2])
print(person["children"][-1])
# both 2 and -1 print Joelle


print(person["pets"]["cat"])



# Build basic calculator:
# create two variables

num1 = input("Enter a number:")
num2 = input("Enter another number: ")
result = int(num1) + int(num2) 
print(result)

num1 = input("Enter a number:")
num2 = input("Enter another number: ")
result = float(num1) + float(num2) 
print(result)

num1 = float(input("Enter a number:"))
num2 = float(input("Enter another number: "))
result = num1 + num2 
print(result)

num1 = float(input("Enter a number:"))
num2 = float(input("Enter another number: "))
result = num1 ** num2 
print(result)

# Enter a number:12
# Enter another number: 100
# 8.281797452201455e+107 < scientific notation, e+ means to the power ot 107




# modules or libraries
# datetime module

import datetime
import math
math.pi
print(math.pi)

print(dir(datetime))
print(help(datetime.date))


# modules or libraries
# datetime module

import datetime
import math



# print(dir(datetime))
# print(help(datetime.date))

# the creator of python

gvr = datetime.date(1956,1,31)
print(gvr)
print(gvr.year)
print(gvr.month)
print(gvr.day)

# adding days to date:
exam = datetime.date(2019,9,28)
dt = datetime.timedelta(40)
print(exam + dt)

# default format: yyyy-mm-dd
# we can change this format to:
# day-name, month-name, year-name, day-#, year

print(gvr.strftime("%A, %B, %d, %Y"))


# print my birthday and figure out what day I was born
gvr = datetime.date(1989,5,19)
print(gvr.strftime("%A, %B, %d, %Y"))

import datetime
import math

# accessing time:
now = datetime.datetime.today()

print(now)


# radius of the Earth < Function



# defining function: def
# Example:
import math

def MAC108():
    print("Hello Class")
MAC108()


def add(x, y):
    return x + y
print(add(7, 5))

# return the volume of sphere:
# v = 4/3 * pi * r^3 only value here is r 

def volS(r):
    v = (4.0/3.0) * math.pi * r**3
    return v
print(volS(6378.1))

# radius of the Sun

import math

# return the volume of sphere:
# v = 4/3 * pi * r^3 only value here is r 

def volS(r):
    v = (4.0/3.0) * math.pi * r**3
    return v
print(volS(695510))


# return area of triangle:
# A= 1/2 b.h

def Areat(b, h) :
    return 0.5 * b * h
print(Areat(5,12))

# convert metric system to american system
# 1 inch = cm
# 1 foot = 12 inches = 30.48 cm

def cm(feet=0, inches=0):

    inches_to_cm = inches * 2.54
    feet_to_cm = feet * 12 * 2.54
    return inches_to_cm + feet_to_cm
print(cm(5,8))

















