
#class:
#python is object_oriented programming
#everything in python is called an object
#class is an object constructor
#create a class
class MyClass:
    x = 5
p1 = MyClass()
print(p1.x)

# object  : p1 = MyClass()

# class method:
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

p2 = Person("jessica",25)
print(p2.name)
print(p2.age)
        
# method : def __init__  : function created under the class
# method of the class : myfunc 

# another example
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    def myfunc(self):
        print("Hello my name is " + self.name + ", I am "
              + str(self.age))
              
p2 = Person("jessica",25)
p2.myfunc()




#python inheritance:
#parent class: base class
#child class: inherites from the parent class
#child class: derivd class


class Person:
    def __init__(self, fname, lname):
        self.firstname= fname
        self.lastname = lname


    def printname (self):
        print(self.firstname,self.lastname)

x= Person("smith" , "John")
x.printname()

#create child class:

class Person:
    def __init__(self, fname, lname):
        self.firstname= fname
        self.lastname = lname


    def printname (self):
        print(self.firstname,self.lastname)

class Student(Person):
    def __init__(self,fname, lname):
        Person.__init__(self, fname, lname)
        
x = Student("Mo" , "dell")
x.printname()

#super function:


class Person:
    def __init__(self, fname, lname):
        self.firstname= fname
        self.lastname = lname


    def printname (self):
        print(self.firstname,self.lastname)

class Student(Person):
    def __init__(self,fname, lname):
        super().__init__(fname, lname) # only can read 3 arguemnts 
        
x = Student("Marry" , "olson")
x.printname()



#add properties:


class Person:
    def __init__(self, fname, lname):
        self.firstname= fname
        self.lastname = lname


    def printname (self):
        print(self.firstname,self.lastname, self.graduationyear)

class Student(Person):
    def __init__(self,fname, lname, year):
        super().__init__(fname, lname) # only can read 3 arguemnts
        self.graduationyear = year
        
x = Student("Carl" , "lewis", 2019)
x.printname()



#add method

class Person:
    def __init__(self, fname, lname):
        self.firstname= fname
        self.lastname = lname


    def printname (self):
        print(self.firstname,self.lastname, self.graduationyear)

class Student(Person):
    def __init__(self,fname, lname, year):
        super().__init__(fname, lname) # only can read 3 arguemnts
        self.graduationyear = year

    def welcome(self):
        print("Welcome", self.firstname, self.lastname,
              "to the class of", self.graduationyear)
        
x = Student("Carl" , "lewis", 2019)
x.welcome()




